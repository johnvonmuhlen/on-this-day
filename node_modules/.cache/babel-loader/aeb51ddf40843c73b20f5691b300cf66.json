{"ast":null,"code":"var _jsxFileName = \"/home/johnvonmuhlen/projects/fishCollection/src/components/Body.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst date = new Date();\nconst month = date.getMonth() + 1;\nconst day = date.getDay();\n\nconst Body = () => {\n  _s();\n\n  const [event, setEvent] = useState(\"\");\n  /*useEffect(() => {\n    fetch(\"https://api.api-ninjas.com/v1/historicalevents?text=roman+empire\", {\n      method: \"GET\",\n      headers: { \"X-Api-Key\": \"Fc5jLn8ODsaHw0Sn/a9pMQ==TvVWzRhLKy5EAehX\" },\n      contentType: \"application/json\",\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setEvent(result[1].year);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(error);\n        }\n      );\n  }, []);*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [month, /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Body, \"rsMEMlx7RRe9tyd3dlynIZT3wKw=\");\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useEffect","useState","date","Date","month","getMonth","day","getDay","Body","event","setEvent"],"sources":["/home/johnvonmuhlen/projects/fishCollection/src/components/Body.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst date = new Date();\nconst month = date.getMonth() + 1;\nconst day = date.getDay();\n\nconst Body = () => {\n  const [event, setEvent] = useState(\"\");\n\n  /*useEffect(() => {\n    fetch(\"https://api.api-ninjas.com/v1/historicalevents?text=roman+empire\", {\n      method: \"GET\",\n      headers: { \"X-Api-Key\": \"Fc5jLn8ODsaHw0Sn/a9pMQ==TvVWzRhLKy5EAehX\" },\n      contentType: \"application/json\",\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setEvent(result[1].year);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(error);\n        }\n      );\n  }, []);*/\n\n  return (\n    <div>\n      {month}\n      <h1>{event}</h1>\n    </div>\n  );\n};\n\nexport default Body;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,MAAMC,KAAK,GAAGF,IAAI,CAACG,QAAL,KAAkB,CAAhC;AACA,MAAMC,GAAG,GAAGJ,IAAI,CAACK,MAAL,EAAZ;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,oBACE;IAAA,WACGG,KADH,eAEE;MAAA,UAAKK;IAAL;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CA7BD;;GAAMD,I;;KAAAA,I;AA+BN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}