{"ast":null,"code":"var _jsxFileName = \"/home/johnvonmuhlen/projects/fishCollection/src/components/Data.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport InfoCard from \"./InfoCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Data = props => {\n  _s();\n\n  useEffect(() => {\n    fetch(\"\", {\n      method: \"GET\",\n      headers: {\n        \"X-Api-Key\": \"Fc5jLn8ODsaHw0Sn/a9pMQ==TvVWzRhLKy5EAehX\"\n      },\n      contentType: \"application/json\"\n    }).then(res => res.json()).then(result => {\n      setEvent(result[1].year);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dataWrapper\",\n    id: \"dataWrapper\",\n    children: cards.map(card => /*#__PURE__*/_jsxDEV(InfoCard, {\n      year: card.year,\n      event: card.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Data, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Data;\nexport default Data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useEffect","useState","InfoCard","Data","props","fetch","method","headers","contentType","then","res","json","result","setEvent","year","error","console","log","cards","map","card","event"],"sources":["/home/johnvonmuhlen/projects/fishCollection/src/components/Data.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport InfoCard from \"./InfoCard\";\n\nconst Data = (props) => {\n  useEffect(() => {\n    fetch(\"\", {\n      method: \"GET\",\n      headers: { \"X-Api-Key\": \"Fc5jLn8ODsaHw0Sn/a9pMQ==TvVWzRhLKy5EAehX\" },\n      contentType: \"application/json\",\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setEvent(result[1].year);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(error);\n        }\n      );\n  }, []);\n  return (\n    <div className=\"dataWrapper\" id=\"dataWrapper\">\n      {cards.map((card) => (\n        <InfoCard year={card.year} event={card.event} />\n      ))}\n    </div>\n  );\n};\n\nexport default Data;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EACtBJ,SAAS,CAAC,MAAM;IACdK,KAAK,CAAC,EAAD,EAAK;MACRC,MAAM,EAAE,KADA;MAERC,OAAO,EAAE;QAAE,aAAa;MAAf,CAFD;MAGRC,WAAW,EAAE;IAHL,CAAL,CAAL,CAKGC,IALH,CAKSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EALjB,EAMGF,IANH,CAOKG,MAAD,IAAY;MACVC,QAAQ,CAACD,MAAM,CAAC,CAAD,CAAN,CAAUE,IAAX,CAAR;IACD,CATL,EAUI;IACA;IACA;IACCC,KAAD,IAAW;MACTC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD,CAfL;EAiBD,CAlBQ,EAkBN,EAlBM,CAAT;EAmBA,oBACE;IAAK,SAAS,EAAC,aAAf;IAA6B,EAAE,EAAC,aAAhC;IAAA,UACGG,KAAK,CAACC,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;MAAU,IAAI,EAAEA,IAAI,CAACN,IAArB;MAA2B,KAAK,EAAEM,IAAI,CAACC;IAAvC;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CA3BD;;GAAMlB,I;;KAAAA,I;AA6BN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}