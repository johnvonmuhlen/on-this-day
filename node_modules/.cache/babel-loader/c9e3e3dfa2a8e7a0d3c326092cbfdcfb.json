{"ast":null,"code":"var _jsxFileName = \"/home/johnvonmuhlen/projects/fishCollection/src/components/Data.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport InfoCard from \"./InfoCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst date = new Date();\nconst day = date.getDay();\nconst month = date.getMonth() - 1;\n\nconst Data = props => {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    fetch(`https://api.api-ninjas.com/v1/historicalevents?month=${month}&day=${day}`, {\n      method: \"GET\",\n      headers: {\n        \"X-Api-Key\": \"Fc5jLn8ODsaHw0Sn/a9pMQ==TvVWzRhLKy5EAehX\"\n      },\n      contentType: \"application/json\"\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      setCards(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dataWrapper\",\n    id: \"dataWrapper\",\n    children: cards.map(card => /*#__PURE__*/_jsxDEV(InfoCard, {\n      today: props.today,\n      year: card.year,\n      event: card.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Data, \"M51NroWgc5aUEHiqsZiaQ+7WeWA=\");\n\n_c = Data;\nexport default Data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useEffect","useState","InfoCard","date","Date","day","getDay","month","getMonth","Data","props","cards","setCards","fetch","method","headers","contentType","then","res","json","result","console","log","error","map","card","today","year","event"],"sources":["/home/johnvonmuhlen/projects/fishCollection/src/components/Data.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport InfoCard from \"./InfoCard\";\n\nconst date = new Date();\nconst day = date.getDay();\nconst month = date.getMonth() - 1;\n\nconst Data = (props) => {\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      `https://api.api-ninjas.com/v1/historicalevents?month=${month}&day=${day}`,\n      {\n        method: \"GET\",\n        headers: { \"X-Api-Key\": \"Fc5jLn8ODsaHw0Sn/a9pMQ==TvVWzRhLKy5EAehX\" },\n        contentType: \"application/json\",\n      }\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n          setCards(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(error);\n        }\n      );\n  }, []);\n  return (\n    <div className=\"dataWrapper\" id=\"dataWrapper\">\n      {cards.map((card) => (\n        <InfoCard today={props.today} year={card.year} event={card.event} />\n      ))}\n    </div>\n  );\n};\n\nexport default Data;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,MAAMC,GAAG,GAAGF,IAAI,CAACG,MAAL,EAAZ;AACA,MAAMC,KAAK,GAAGJ,IAAI,CAACK,QAAL,KAAkB,CAAhC;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IACda,KAAK,CACF,wDAAuDN,KAAM,QAAOF,GAAI,EADtE,EAEH;MACES,MAAM,EAAE,KADV;MAEEC,OAAO,EAAE;QAAE,aAAa;MAAf,CAFX;MAGEC,WAAW,EAAE;IAHf,CAFG,CAAL,CAQGC,IARH,CAQSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARjB,EASGF,IATH,CAUKG,MAAD,IAAY;MACVC,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACAR,QAAQ,CAACQ,MAAD,CAAR;IACD,CAbL,EAcI;IACA;IACA;IACCG,KAAD,IAAW;MACTF,OAAO,CAACC,GAAR,CAAYC,KAAZ;IACD,CAnBL;EAqBD,CAtBQ,EAsBN,EAtBM,CAAT;EAuBA,oBACE;IAAK,SAAS,EAAC,aAAf;IAA6B,EAAE,EAAC,aAAhC;IAAA,UACGZ,KAAK,CAACa,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;MAAU,KAAK,EAAEf,KAAK,CAACgB,KAAvB;MAA8B,IAAI,EAAED,IAAI,CAACE,IAAzC;MAA+C,KAAK,EAAEF,IAAI,CAACG;IAA3D;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAjCD;;GAAMnB,I;;KAAAA,I;AAmCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}