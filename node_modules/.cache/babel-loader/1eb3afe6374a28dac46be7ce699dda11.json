{"ast":null,"code":"var _jsxFileName = \"/home/johnvonmuhlen/projects/fishCollection/src/components/Data.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport InfoCard from \"./InfoCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Data = props => {\n  _s();\n\n  const [cards, setCards] = useState([{\n    year: \"-45\",\n    month: \"01\",\n    day: \"01\",\n    event: \"The Julian calendar takes effect as the civil calendar of the Roman Empire, establishing January 1 as the new date of the new year.\"\n  }, {\n    year: \"366\",\n    month: \"01\",\n    day: \"02\",\n    event: \"The Alemanni cross the frozen Rhine in large numbers, invading the Roman Empire.\"\n  }, {\n    year: \"250\",\n    month: \"01\",\n    day: \"03\",\n    event: \"Emperor Decius orders everyone in the Roman Empire (except Jews) to make sacrifices to the Roman gods.\"\n  }, {\n    year: \"98\",\n    month: \"01\",\n    day: \"27\",\n    event: \"Trajan succeeds his adoptive father Nerva as Roman emperor; under his rule the Roman Empire will reach its maximum extent.\"\n  }, {\n    year: \"1018\",\n    month: \"01\",\n    day: \"30\",\n    event: \"Poland and the Holy Roman Empire conclude the Peace of Bautzen.\"\n  }, {\n    year: \"-421\",\n    month: \"02\",\n    day: \"08\",\n    event: \"Constantius III becomes co-Emperor of the Western Roman Empire.\"\n  }]);\n  useEffect(() => {\n    fetch(\"\", {\n      method: \"GET\",\n      headers: {\n        \"X-Api-Key\": \"Fc5jLn8ODsaHw0Sn/a9pMQ==TvVWzRhLKy5EAehX\"\n      },\n      contentType: \"application/json\"\n    }).then(res => res.json()).then(result => {\n      console.log(cards);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dataWrapper\",\n    id: \"dataWrapper\",\n    children: cards.map(card => /*#__PURE__*/_jsxDEV(InfoCard, {\n      today: props.today,\n      year: card.year,\n      event: card.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Data, \"eTbL4oIX1r8BEZClehvrBN86WPw=\");\n\n_c = Data;\nexport default Data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useEffect","useState","InfoCard","Data","props","cards","setCards","year","month","day","event","fetch","method","headers","contentType","then","res","json","result","console","log","error","map","card","today"],"sources":["/home/johnvonmuhlen/projects/fishCollection/src/components/Data.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport InfoCard from \"./InfoCard\";\n\nconst Data = (props) => {\n  const [cards, setCards] = useState([\n    {\n      year: \"-45\",\n      month: \"01\",\n      day: \"01\",\n      event:\n        \"The Julian calendar takes effect as the civil calendar of the Roman Empire, establishing January 1 as the new date of the new year.\",\n    },\n    {\n      year: \"366\",\n      month: \"01\",\n      day: \"02\",\n      event:\n        \"The Alemanni cross the frozen Rhine in large numbers, invading the Roman Empire.\",\n    },\n    {\n      year: \"250\",\n      month: \"01\",\n      day: \"03\",\n      event:\n        \"Emperor Decius orders everyone in the Roman Empire (except Jews) to make sacrifices to the Roman gods.\",\n    },\n    {\n      year: \"98\",\n      month: \"01\",\n      day: \"27\",\n      event:\n        \"Trajan succeeds his adoptive father Nerva as Roman emperor; under his rule the Roman Empire will reach its maximum extent.\",\n    },\n    {\n      year: \"1018\",\n      month: \"01\",\n      day: \"30\",\n      event: \"Poland and the Holy Roman Empire conclude the Peace of Bautzen.\",\n    },\n    {\n      year: \"-421\",\n      month: \"02\",\n      day: \"08\",\n      event: \"Constantius III becomes co-Emperor of the Western Roman Empire.\",\n    },\n  ]);\n\n  useEffect(() => {\n    fetch(\"\", {\n      method: \"GET\",\n      headers: { \"X-Api-Key\": \"Fc5jLn8ODsaHw0Sn/a9pMQ==TvVWzRhLKy5EAehX\" },\n      contentType: \"application/json\",\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          console.log(cards);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(error);\n        }\n      );\n  }, []);\n  return (\n    <div className=\"dataWrapper\" id=\"dataWrapper\">\n      {cards.map((card) => (\n        <InfoCard today={props.today} year={card.year} event={card.event} />\n      ))}\n    </div>\n  );\n};\n\nexport default Data;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CACjC;IACEM,IAAI,EAAE,KADR;IAEEC,KAAK,EAAE,IAFT;IAGEC,GAAG,EAAE,IAHP;IAIEC,KAAK,EACH;EALJ,CADiC,EAQjC;IACEH,IAAI,EAAE,KADR;IAEEC,KAAK,EAAE,IAFT;IAGEC,GAAG,EAAE,IAHP;IAIEC,KAAK,EACH;EALJ,CARiC,EAejC;IACEH,IAAI,EAAE,KADR;IAEEC,KAAK,EAAE,IAFT;IAGEC,GAAG,EAAE,IAHP;IAIEC,KAAK,EACH;EALJ,CAfiC,EAsBjC;IACEH,IAAI,EAAE,IADR;IAEEC,KAAK,EAAE,IAFT;IAGEC,GAAG,EAAE,IAHP;IAIEC,KAAK,EACH;EALJ,CAtBiC,EA6BjC;IACEH,IAAI,EAAE,MADR;IAEEC,KAAK,EAAE,IAFT;IAGEC,GAAG,EAAE,IAHP;IAIEC,KAAK,EAAE;EAJT,CA7BiC,EAmCjC;IACEH,IAAI,EAAE,MADR;IAEEC,KAAK,EAAE,IAFT;IAGEC,GAAG,EAAE,IAHP;IAIEC,KAAK,EAAE;EAJT,CAnCiC,CAAD,CAAlC;EA2CAV,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,EAAD,EAAK;MACRC,MAAM,EAAE,KADA;MAERC,OAAO,EAAE;QAAE,aAAa;MAAf,CAFD;MAGRC,WAAW,EAAE;IAHL,CAAL,CAAL,CAKGC,IALH,CAKSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EALjB,EAMGF,IANH,CAOKG,MAAD,IAAY;MACVC,OAAO,CAACC,GAAR,CAAYf,KAAZ;IACD,CATL,EAUI;IACA;IACA;IACCgB,KAAD,IAAW;MACTF,OAAO,CAACC,GAAR,CAAYC,KAAZ;IACD,CAfL;EAiBD,CAlBQ,EAkBN,EAlBM,CAAT;EAmBA,oBACE;IAAK,SAAS,EAAC,aAAf;IAA6B,EAAE,EAAC,aAAhC;IAAA,UACGhB,KAAK,CAACiB,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;MAAU,KAAK,EAAEnB,KAAK,CAACoB,KAAvB;MAA8B,IAAI,EAAED,IAAI,CAAChB,IAAzC;MAA+C,KAAK,EAAEgB,IAAI,CAACb;IAA3D;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAtED;;GAAMP,I;;KAAAA,I;AAwEN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}